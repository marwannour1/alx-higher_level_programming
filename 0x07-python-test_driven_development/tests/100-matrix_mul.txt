The ``100-matrix_mul`` module
----------------------------
Using the ``matrix_mul`` function
--------------------------------

import the ``matrix_mul`` function from the ``100_matrix_mul`` module

>>>matrix_mul = __import__('100_matrix_mul').matrix_mul

Test two valid matrices:

    >>>matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    >>>matrix_mul([[1, 2, 3], [4, 5, 6]], [[1, 2], [3, 4], [5, 6]])
    [[22, 28], [49, 64]]


Test invalid matrices:

    >>>matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
        ...
    ValueError: m_a and m_b can't be multiplied


Test no arguments:

    >>>matrix_mul()
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'


Test one argument:

    >>>matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'


Test string in matrix:

    >>>matrix_mul([[1, 2], [3, "4"]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats


Test string in matrix:

    >>>matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, "4"]])
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats


Test empty matrix:

    >>>matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty
