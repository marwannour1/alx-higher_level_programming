The ``0-add_integer`` module
=============================
Using the ``add_integer`` function
----------------------------------

Import function from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Test one int argument:

    >>> add_integer(1)
    99

Test one float argument:

    >>> add_integer(4.3)
    102

Test one negative int argument:

    >>> add_integer(-5)
    93

Test one negative float argument:

    >>> add_integer(-2.3)
    96

Test two int arguments:

    >>> add_integer(1, 2)
    3

Test two float arguments:
    
    >>> add_integer(2.3, 5.7)
    7

Test no arguments:
    
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Test one string argument:
    
    >>> add_integer("Hello")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test one list argument:
        
    >>> add_integer([1, 2, 3])
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test two string arguments:

    >>> add_integer("Hello", "World")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test two negative arguments:

    >>> add_integer(-1, -2)
    -3

Test two negative float arguments:

    >>> add_integer(-2.3, -5.7)
    -7

Test float overflow:

    >>> add_integer(1e100, 1e100)
    Traceback (most recent call last):
    ...
    OverflowError: int too large to convert to float

Test convert float NAN to int:

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
